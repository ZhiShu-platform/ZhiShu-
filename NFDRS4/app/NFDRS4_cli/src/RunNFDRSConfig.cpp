//----------------------------------------------------------------------
// WARNING: This file was generated by config2cpp. Do not edit.
//----------------------------------------------------------------------

#include "RunNFDRSConfig.h"





RunNFDRSConfig::RunNFDRSConfig()
{
	m_schema[0] = "allOutputsFile = string";
	m_schema[1] = "fuelMoisturesOutputFile = string";
	m_schema[2] = "indexOutputFile = string";
	m_schema[3] = "initFile = string";
	m_schema[4] = "loadFromStateFile = string";
	m_schema[5] = "outputInterval = int";
	m_schema[6] = "saveToStateFile = string";
	m_schema[7] = "stationID = string";
	m_schema[8] = "useStoredOutputs = int";
	m_schema[9] = "wxFile = string";
	m_schema[10] = 0;

	m_str << "# Sample RunNFDRS configuration file\n";
	m_str << "# required to initialize RunNFDRS program\n";
	m_str << "# used by config2cpp.exe as follows:\n";
	m_str << "# config2cpp -cfg RunNFDRSSample.txt -class RunNFD";
	m_str << "RSConfig\n";
	m_str << "# NOTE short paths are used here, use of complete ";
	m_str << "paths is recommended but not required\n";
	m_str << "initFile = \"/NFDRSInitSample.txt\";\n";
	m_str << "# required as input for processing\n";
	m_str << "wxFile = \"/someWx.fw21\";\n";
	m_str << "#NFDRSState saving and loading capabilities (optio";
	m_str << "nal)\n";
	m_str << "#loadFromState will load the state file and begin ";
	m_str << "any calculations from the saved state\n";
	m_str << "loadFromStateFile = \"/someSavedState.nfdrs\";\n";
	m_str << "#saveToStateFile will save the state when calculat";
	m_str << "ion is complete to the indicated file\n";
	m_str << "saveToStateFile = \"/newSavedState.nfdrs\";\n";
	m_str << "# output files (csv) can be designated, otherwise ";
	m_str << "nothing is output \n";
	m_str << "# if they exist, they are appended to by the progr";
	m_str << "am\n";
	m_str << "# output files include a date/time and selected ou";
	m_str << "tputs\n";
	m_str << "#csv header is only written to the output file if ";
	m_str << "the file is being created\n";
	m_str << "#all outputs available, includes fuel moistures an";
	m_str << "d indexes\n";
	m_str << "allOutputsFile = \"/NFDRSoutput.csv\";\n";
	m_str << "#indexes only\n";
	m_str << "indexOutputFile = \"/NFDRSIndexes.csv\";\n";
	m_str << "#fuel moistures\n";
	m_str << "fuelMoisturesOutputFile = \"/NFDRSMoistures.csv\";\n";
	m_str << "#outputInterval 0 = hourly (each record), 1 = dail";
	m_str << "y (at ObsHour from NFDRSInit file)\n";
	m_str << "outputInterval = \"0\";\n";
	m_str << "#Option to use stored outputs from previously run ";
	m_str << "'allOutputsFile' output \n";
	m_str << "#causes NFDRS4 to bypass running of Nelson and GSI";
	m_str << " models, calculating indexes using stored NFDRS4 o";
	m_str << "utputs\n";
	m_str << "#an error will be returned if 'wxFile' does not co";
	m_str << "ntain necessary fields\n";
	m_str << "#any record missing necessary any fields will be s";
	m_str << "kipped\n";
	m_str << "useStoredOutputs = \"0\";\n";
	m_str << "#Added as required, 4/27/2024\n";
	m_str << "#to accomodate multiple stations in a single FW21 ";
	m_str << "format file\n";
	m_str << "#stationID was added as a data element to FW21 and";
	m_str << " NFDRS4_cli config file\n";
	m_str << "#this stationID will be used when StationID is not";
	m_str << " present in FW21\n";
	m_str << "stationID = \"some_stationID\";";
}





RunNFDRSConfig::~RunNFDRSConfig()
{
	// Nothing to do
}


